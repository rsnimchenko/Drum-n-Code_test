plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

android {
    namespace 'com.shooter.drumncode_test'
    compileSdk gradleDependencies.compileSdk

    defaultConfig {
        applicationId "com.shooter.drumncode_test"
        minSdk gradleDependencies.minSdk
        targetSdk gradleDependencies.targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility gradleDependencies.compileOptions
        targetCompatibility gradleDependencies.compileOptions
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.5'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation androidXDependencies.lib
    implementation androidXDependencies.splashScreen

    implementation lifecycleDependencies.runtimeKtx
    implementation lifecycleDependencies.viewmodelCompose

    implementation composeDependencies.activityCompose
    implementation composeDependencies.ui
    implementation composeDependencies.uiToolingPreview
    implementation composeDependencies.material
    implementation composeDependencies.navigationCompose
    debugImplementation composeDependencies.uiTooling

    implementation hiltDependencies.lib
    implementation hiltDependencies.navigationCompose
    kapt hiltDependencies.compiler

    implementation retrofitDependencies.lib
    implementation retrofitDependencies.converterGson

    implementation roomDependencies.runtime
    implementation roomDependencies.ktx
    annotationProcessor roomDependencies.compiler
    kapt roomDependencies.kapt
}